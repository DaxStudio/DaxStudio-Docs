"use strict";(globalThis.webpackChunkdaxstudio_docusaurus=globalThis.webpackChunkdaxstudio_docusaurus||[]).push([[2739],{28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>l});var t=o(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},66581:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"features/command-line/powershell-examples","title":"PowerShell Examples","description":"When you combine dscmd.exe with powershell you can do some really powerful things like looping through a series of values and outputting a series of files.","source":"@site/docs/features/command-line/powershell-examples.md","sourceDirName":"features/command-line","slug":"/features/command-line/powershell-examples","permalink":"/docs/features/command-line/powershell-examples","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"PowerShell Examples"},"sidebar":"tutorialSidebar","previous":{"title":"Connecting","permalink":"/docs/features/command-line/connecting"},"next":{"title":"Syntax","permalink":"/docs/features/command-line/syntax"}}');var s=o(74848),r=o(28453);const a={title:"PowerShell Examples"},l="Example 1",i={},c=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["When you combine ",(0,s.jsx)(n.code,{children:"dscmd.exe"})," with powershell you can do some really powerful things like looping through a series of values and outputting a series of files."]}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"example-1",children:"Example 1"})}),"\n",(0,s.jsx)(n.p,{children:"The following example loops through an array of characters and export rows where the 'Product'[Color] value starts with the specified letter. This shows how you can insert a variable from Powershell into your query and filename dynamically."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Note that double quote characters ",(0,s.jsx)(n.code,{children:'"'})," inside 'here strings' ",(0,s.jsx)(n.code,{children:'@"..."@'})," need to be double escaping using a backslash and a backtick eg  ",(0,s.jsx)(n.code,{children:'\\`"'})]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"$cmd = \"C:\\Users\\dgosbell\\Downloads\\DaxStudio_3_1_0_portable\\dscmd.exe\"\n$server = \"localhost:50909\"\n$database = \"5389c85e-326d-4e8f-8e42-f2db2fcb98a4\"\n\nforeach ($letter in @(\"B\", \"R\"))\n{\n\n    $query = @\"\n/* START QUERY BUILDER */\nEVALUATE\nSUMMARIZECOLUMNS(\n    'Product'[Category],\n    'Product'[Color],\n    'Product'[Model],\n    Reseller[Business Type],\n    Customer[Country-Region],\n    Customer[State-Province],\n    KEEPFILTERS( FILTER( ALL( 'Product'[Color] ), SEARCH( \\`\"$letter\\`\", 'Product'[Color], 1, 0 ) = 1 )),\n    \\`\"Total Sales\\`\", [Total Sales]\n)\nORDER BY \n    'Product'[Category] ASC,\n    'Product'[Color] ASC,\n    'Product'[Model] ASC,\n    Reseller[Business Type] ASC,\n    Customer[Country-Region] ASC,\n    Customer[State-Province] ASC\n/* END QUERY BUILDER */\n\"@  \n\n    &$cmd csv c:\\temp\\test-$letter.csv -s $server -d $database -q $query\n\n}\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);