"use strict";(self.webpackChunkdaxstudio_docusaurus=self.webpackChunkdaxstudio_docusaurus||[]).push([[8249],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),c=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(m.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,f=d["".concat(m,".").concat(p)]||d[p]||s[p]||l;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},59469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={title:"CSV command"},o=void 0,i={unversionedId:"features/command-line/commands/csv-command",id:"features/command-line/commands/csv-command",title:"CSV command",description:"This command will output a csv file based on the results of a DAX query",source:"@site/docs/features/command-line/commands/csv-command.md",sourceDirName:"features/command-line/commands",slug:"/features/command-line/commands/csv-command",permalink:"/docs/features/command-line/commands/csv-command",draft:!1,tags:[],version:"current",frontMatter:{title:"CSV command"},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/docs/features/command-line/commands"},next:{title:"EXPORT CSV command",permalink:"/docs/features/command-line/commands/export-csv-command"}},m={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2}],u={toc:c},d="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This command will output a csv file based on the results of a DAX query"),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"DSCMD CSV <OutputFile> [OPTIONS]\n")),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"<","OutputFile>"),(0,r.kt)("td",{parentName:"tr",align:null},"The path and name of the file to which the CSV data will be written")))),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-h, --help"),(0,r.kt)("td",{parentName:"tr",align:null},"displays the help for the CSV command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-s, --server ","<","SERVER>"),(0,r.kt)("td",{parentName:"tr",align:null},"the name of the server to connect to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-d, --database ","<","DATABASE>"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the tabular database to export from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-u, --userid ","<","USERID>"),(0,r.kt)("td",{parentName:"tr",align:null},"The username to use for authentication (see ",(0,r.kt)("a",{parentName:"td",href:"../../authentication"},"Authentication")," for more details)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-p, --password ","<","PASSWORD>"),(0,r.kt)("td",{parentName:"tr",align:null},"The password to use for authentication (see ",(0,r.kt)("a",{parentName:"td",href:"../../authentication"},"Authentication")," for more details)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-c, --connectionstring ","<","CONNECTIONSTRING>"),(0,r.kt)("td",{parentName:"tr",align:null},"The connection string for the data source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-f, --file ","<","FILE>"),(0,r.kt)("td",{parentName:"tr",align:null},"A file containing a DAX query to be executed. Could be a text file or .dax or .daxx")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-q, --query ","<","QUERY>"),(0,r.kt)("td",{parentName:"tr",align:null},"A string with the DAX query to be executed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-t, --filetype"),(0,r.kt)("td",{parentName:"tr",align:null},"Can be one of the following values { UTF8CSV, UNICODECSV, JSON, TAB } if omitted the file extension is used ",(0,r.kt)("ul",null,(0,r.kt)("li",null,".csv - UFT-8 csv file is generated"),(0,r.kt)("li",null,".txt - tab delimited file is generated"),(0,r.kt)("li",null,".json - a json file is generated ")))))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The following example exports to a file called myquery.csv in the c:\\temp folder and connects as the user running the command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'dscmd csv c:\\temp\\myquery.csv -s localhost\\tab19 -d "Adventure Works DW" -q "EVALUATE \'product\'"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'dscmd csv c:\\temp\\myquery.csv -c "Data Source=localhost\\tab19;initial catalog=Adventure Works DW" -q "EVALUATE \'product\'"\n')))}s.isMDXComponent=!0}}]);